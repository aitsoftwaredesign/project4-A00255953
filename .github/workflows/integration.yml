# This workflow builds the Java project and React project in separate jobs then builds and pushes
# the docker images for each of the Java services, React client and the Proxy service
name: Integration and Delivery

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

env:
  CLIENT_IMAGE_NAME: nicholasmurray/booking_ally_client
  PROXY_IMAGE_NAME: nicholasmurray/proxy-service

jobs:
  build-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: s4u/maven-settings-action@v2.2.0
        with:
          properties: '[{"jib.username": "${{ secrets.JIB_USER}}" , "jib.password":  "${{ secrets.JIB_PASS}}" }]'
      - name: Build with Maven
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET}}
        run: mvn package --file Backend/services/pom.xml -P ci
  build-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Client/booking-ally/production/Dockerfile --tag $CLIENT_IMAGE_NAME

      - name: Log into Docker
        run: docker login -u ${{ secrets.JIB_USER }} -p ${{ secrets.JIB_PASS }}

      - name: Push image to Dockerhub
        run: docker push $CLIENT_IMAGE_NAME
  build-proxy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Proxy/Dockerfile --tag $PROXY_IMAGE_NAME

      - name: Log into Docker
        run: docker login -u ${{ secrets.JIB_USER }} -p ${{ secrets.JIB_PASS }}

      - name: Push image to Dockerhub
        run: docker push $PROXY_IMAGE_NAME

  merge:
    runs-on: ubuntu-latest
    needs: [build-service, build-client, build-proxy]
    steps:
      - uses: actions/checkout@master

      - name: Merge development -> master
        uses: devmasx/merge-branch@v1.3.1
        with:
          type: now
          from_branch: development
          target_branch: master
          github_token: ${{ github.token }}

