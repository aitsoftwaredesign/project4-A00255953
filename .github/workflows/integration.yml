# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven


name: Integration and Delivery

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

env:
  IMAGE_NAME: nicholasmurray/booking_ally_client 

jobs:
  build-service:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: s4u/maven-settings-action@v2.2.0
      with:
        properties: '[{"jib.username": "${{ secrets.JIB_USER}}" , "jib.password":  "${{ secrets.JIB_PASS}}" }]'  
    - name: Build with Maven
      run: mvn package --file Server/service/pom.xml jib:build
  build-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Client/booking-ally/Dockerfile.prod --tag $IMAGE_NAME

      - name: Log into Docker
      # TODO: Create a PAT with `read:packages` and `write:packages` scopes and save it as an Actions secret `CR_PAT`
        run: docker login -u ${{ secrets.JIB_USER }} -p ${{ secrets.JIB_PASS }}

      - name: Push image to Dockerhub
        run: docker push $IMAGE_NAME

  merge:
    runs-on: ubuntu-latest
    needs: [build-service, build-client]
    steps:
      - uses: actions/checkout@master

      - name: Merge development -> master
        uses: devmasx/merge-branch@v1.3.1
        with:
          type: now
          from_branch: development
          target_branch: master
          github_token: ${{ github.token }}
